@page "/appointments/create"
@using BlazorServerAppointmentApp.Model
@using global::Appointment.Shared.Model
@using Microsoft.AspNetCore.Identity
@inject HttpClient http
@inject NavigationManager UriHelper
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager

<Form ButtonText= "Create appointment" MedicalProcedureViewModels="@_medicalProcedureViewModels"
      AppointmentViewModel="@_appointmentViewModel"/>
      
      
@code{
      AppointmentViewModel _appointmentViewModel = new AppointmentViewModel();
      List<MedicalProcedureViewModel> _medicalProcedureViewModels = new List<MedicalProcedureViewModel>();
      private CustomValidator customValidator = new CustomValidator();
      

      protected override async Task OnInitializedAsync()
      {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            
            var user = await UserManager.GetUserAsync(authState.User);

            if (authState.User.Identity.IsAuthenticated && user != null)
            {
                  _appointmentViewModel.User.Id = user.Id;
                  _appointmentViewModel.User.Email = user.Email;
                  _appointmentViewModel.User.FirstName = user.FirstName;
                  _appointmentViewModel.User.LastName = user.LastName;
                  _appointmentViewModel.User.PhoneNumber = user.PhoneNumber;
            }
            _medicalProcedureViewModels = await StateProvider.GetMedicalProcedures();
      }
      
          
      [CascadingParameter]
      StateProvider StateProvider { get; set; }

      protected override void OnInitialized() => StateProvider.OnChange += StateHasChanged;
      public void Dispose() => StateProvider.OnChange -= StateHasChanged;
}
      