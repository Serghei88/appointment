// <auto-generated />
using System;
using BlazorServerAppointmentApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Appointment.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200927144750_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Appointment.Shared.Model.Appointment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("MedicalProcedureId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MedicalProcedureId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Appointment.Shared.Model.Doctor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Appointment.Shared.Model.DoctorMedicalProcedure", b =>
                {
                    b.Property<long>("DoctorId")
                        .HasColumnType("bigint");

                    b.Property<long>("MedicalProcedureId")
                        .HasColumnType("bigint");

                    b.HasKey("DoctorId", "MedicalProcedureId");

                    b.HasIndex("MedicalProcedureId");

                    b.ToTable("DoctorMedicalProcedure");
                });

            modelBuilder.Entity("Appointment.Shared.Model.MedicalProcedure", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MedicalProcedures");
                });

            modelBuilder.Entity("Appointment.Shared.Model.Appointment", b =>
                {
                    b.HasOne("Appointment.Shared.Model.MedicalProcedure", "MedicalProcedure")
                        .WithMany()
                        .HasForeignKey("MedicalProcedureId");
                });

            modelBuilder.Entity("Appointment.Shared.Model.DoctorMedicalProcedure", b =>
                {
                    b.HasOne("Appointment.Shared.Model.Doctor", "Doctor")
                        .WithMany("DoctorMedicalProcedures")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Appointment.Shared.Model.MedicalProcedure", "MedicalProcedure")
                        .WithMany("DoctorMedicalProcedures")
                        .HasForeignKey("MedicalProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
